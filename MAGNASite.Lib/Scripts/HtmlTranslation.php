/* Copyright © Alex Malmyguine, 2022
 * All right reserved
 * This program remains the property of the copyright owner at all times.
 * It cannot be used for any purposes without express, written permission from the copyright owner.
 * Intellectual property contained in this program is protected by Canadian, US, and international copyright laws.
 * 
 * Generated by: Scripts/HtmlTranslation.php
 */
namespace MAGNASite.Lib
{
	internal static class HTML_ENTITIES
	{
<?php
function gen($classS, $dictS, $class, $dict)
{
	$ENTITIES = get_html_translation_table($class, $dict);
	$count = count($ENTITIES);
	//print_r($ENTITIES);
	echo "\t\tpublic readonly static Dictionary<string, string> $dictS = new Dictionary<string, string>(".$count.")\n";
	echo "\t\t{\n";
	$i = 1;
	foreach($ENTITIES as $key => $value)
	{
//echo "'" . $key . "' '" . $value ."'\n";
		$tkey = $key=='"' ? '\"' :
			$key == "\n" ? "\\n" :
			$key == "\t" ? "\\t" :
			$key == "\\" ? "\\\\" : $key;

		echo "\t\t\t{ \"" . $tkey . "\", \"" . $value . "\" }" . ($i==$count ? "" : ",") . "\n";
		$i++;
	};
	unset($value);
	echo "\t\t};\n\n";
}

function gen_method($classS, $class, $doctypes)
{
	echo "\t\tpublic static IEnumerable<KeyValuePair<string, string>> GetEntities(HtmlDocumentTypes entities)\n";
	echo "\t\t{\n";
	echo "\t\t\tvar result = new HashSet<KeyValuePair<string, string>>();\n";

	foreach ($doctypes as $key => $value)
	{
		echo "\n\t\t\tif ((entities | HtmlDocumentTypes." . $key . ") == entities);\n";
		echo "\t\t\t{\n";
		echo "\t\t\t\tresult.Concat(" . $key . ");\n";
		echo "\t\t\t}\n";
	}

	echo "\n\t\t\treturn result;\n";
	echo "\t\t}\n\n";
}

$doctypes1 = array(
	"ENT_QUOTES" => ENT_QUOTES,
	"ENT_NOQUOTES" => ENT_NOQUOTES,
	"ENT_SUBSTITUTE "	=> ENT_SUBSTITUTE,
	"ENT_HTML401"	=> ENT_HTML401,
	"ENT_XML1"	=> ENT_XML1,
	"ENT_XHTML"	=> ENT_XHTML,
	"ENT_HTML5"	=> ENT_HTML5
);
gen_method( "HTML_ENTITIES", HTML_ENTITIES, $doctypes1);
foreach ($doctypes1 as $key => $value)
{
	gen( "HTML_ENTITIES", $key,	HTML_ENTITIES, $value );
}

echo "\t}\n\n";

echo "\tinternal static class HTML_SPECIALCHARS\n";
echo "\t{\n";
$doctypes2 = array(
	"ENT_COMPAT" => ENT_COMPAT,
	"ENT_QUOTES" => ENT_QUOTES,
	"ENT_NOQUOTES" => ENT_NOQUOTES,
	"ENT_SUBSTITUTE "	=> ENT_SUBSTITUTE,
	"ENT_HTML401"	=> ENT_HTML401,
	"ENT_XML1"	=> ENT_XML1,
	"ENT_XHTML"	=> ENT_XHTML,
	"ENT_HTML5"	=> ENT_HTML5
);
gen_method( "HTML_SPECIALCHARS", HTML_SPECIALCHARS, $doctypes2);
foreach ($doctypes2 as $key => $value)
{
	gen( "HTML_SPECIALCHARS", $key,	HTML_SPECIALCHARS, $value );
}
?>
	}
}
